/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/*class AppTest {
	@Test
	void test1() {
		Swimming_pool x = new Swimming_pool(true, false, false, 22, 1, 2);
		Exception exception = assertThrows(Exception.class,
				() -> x.countPrice());
		assertEquals("Error", exception.getMessage());
	}

	@Test
	void test2() throws Exception {
		Swimming_pool x = new Swimming_pool(true, false, false, 7, 1, 13);
		x.countPrice();

		assertEquals(250, x.price);
	}

	@Test
	void test3() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, false, 7, 1, 13);
		x.countPrice();

		assertEquals(200, x.price);
	}

	@Test
	void test4() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, false, 5, 0, 3);
		x.countPrice();

		assertEquals(160, x.price);
	}

	@Test
	void test5() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, true, 5, 0, 60);
		x.countPrice();

		assertEquals(140, x.price);
	}

	@Test
	void test6() throws Exception {
		Swimming_pool x = new Swimming_pool(true, true, true, 5, 0, 3);
		x.countPrice();

		assertEquals(125, x.price);
	}

	@Test
	void test7() throws Exception {
		Swimming_pool x = new Swimming_pool(false, true, true, 5, 0, 3);
		x.countPrice();

		assertEquals(100, x.price);
	}

	@Test
	void test8() {
		Swimming_pool x = new Swimming_pool(true, false, false, 7, 1, 76);
		Exception exception = assertThrows(Exception.class,
				() -> x.countPrice());
		assertEquals("Error", exception.getMessage());
	}

	// 補涵蓋度
	@Test
	void test9() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, false, 7, 0, 60);
		x.countPrice();
		assertEquals(160, x.price);
	}
	@Test
	void test10() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, false, 8, 0, 60);
		x.countPrice();
		assertEquals(160, x.price);
	}
	@Test
	void test11() throws Exception {
		Swimming_pool x = new Swimming_pool(false, false, false, 8, 0, 3);
		x.countPrice();
		assertEquals(160, x.price);
	}
}*/



class Swimming_poolTest {

	@Test
	void testSwimming_pool1() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 7;
		boolean test_member = true;
		int test_age = 11;
		int test_time = 5;
		boolean test_group = true;
		assertEquals(125,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool2() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 12;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool3() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 13;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(200,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}

	
	@Test
	void testSwimming_pool4() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 59;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(200,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool5() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 60;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool6() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 61;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool7() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 2;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(0,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool8() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 3;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool9() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 4;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool10() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 74;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool11() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 75;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(160,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
	
	@Test
	void testSwimming_pool12() {
		Swimming_pool test = new Swimming_pool();
		int test_date = 4;
		boolean test_member = false;
		int test_age = 76;
		int test_time = 12;
		boolean test_group = false;
		assertEquals(0,test.swimming_pool(test_date, test_member, test_age, test_time, test_group));
	}
}

